data demo; *Scatter Plot dataset;
  set sashelp.demographics; 
  array chr(*) _character_; array num(*) _numeric_;    
  do i = 1 to dim(chr); if missing(chr(i)) then delete; end;                            
  do j = 1 to dim(num); if missing(num(j)) then delete; end;                               
  drop i j; 

*Table 1a. SAS Code for creating a scatter plot using the GTL and PROC SGRENDER procedure.
PROC TEMPLATE;
  DEFINE STATGRAPH scatter;
    BEGINGRAPH /* /designheight =… designwidth = … */;
      ENTRYTITLE 'Net Primary School Enrollment Ratio - Female vs. Male';
        LAYOUT OVERLAY / XAXISOPTS=(OFFSETMIN=0.09 OFFSETMAX=0.09 LABEL='Male%' LINEAROPTS=(TICKVALUESEQUENCE=(
        START=0.3 END=1 INCREMENT=.1) VIEWMAX=1))
        YAXISOPTS=(OFFSETMIN=0.1 OFFSETMAX=0.1 LABEL='Female%');
          SCATTERPLOT Y = FemaleSchoolPct X = MaleSchoolPct/ DATALABEL = name MARKERATTRS = (SYMBOL = trianglefilled COLOR = purple SIZE = 10px);
        ENDLAYOUT;
    ENDGRAPH;
END;

PROC SORT DATA = demo; BY region;
PROC SGRENDER DATA=demo TEMPLATE=Scatter; 
*where adultliteracypct between 0.5 and 0.9;

*****************************************************************************
*****************************************************************************
DATA dropline; *Weibull, Series Plot with Drop Lines data;
  lam = 1; k = 1.5;
    do x = 0 to 4 by 0.01;
      y = (k/lam)*((x/lam)**(k-1))*exp(-(x/lam)**k);
	if .5<= x <=4 and abs(x-round(x)) < 1e-6 then x2 = x; else x2 = .;
	if n(x2) then y2 = y;
  OUTPUT; 
END;

* Table 2a. The GTL template for creating a Weibull Series Plots with Drop Lines.
PROC TEMPLATE; 
  DEFINE STATGRAPH Weibull; 
    BEGINGRAPH;
      LAYOUT OVERLAY;
        SERIESPLOT X=x Y=y / CURVELABEL='Weibull PDF' LINEATTRS=GRAPHDATA(THICKNESS= 3);
        DROPLINE X=x2 Y=y2 / DROPTO=X;
        SCATTERPLOT X = eval(x2 - 0.5) Y =eval(0*x +  0.1)/ 
        MARKERCHARACTER = EVAL(put(1-exp(-x**1.5),3.2))*cdf; MARKERCHARACTERATTRS=(SIZE=10);
      ENDLAYOUT; 
    ENDGRAPH; 
END;
PROC SGRENDER DATA = dropline TEMPLATE = Weibull;


*****************************************************************************
*****************************************************************************
* Table 3. GTL for creating Scatter Matrix with univariate histograms on the diagonal.
PROC TEMPLATE;
  DEFINE STATGRAPH scattermatrix;
    BEGINGRAPH / designheight = defaultdesignwidth; *height=width;
      ENTRYTITLE 'scatterplot';
      LAYOUT GRIDDED;
        SCATTERPLOTMATRIX msrp horsepower mpg_highway / ellipse = (type = predicted) diagonal = (histogram normal kernel) 
        group = drivetrain markerattrs = (size = 15);
      ENDLAYOUT;
    ENDGRAPH;
END;

PROC SGRENDER DATA = cars(where = (make = 'honda')) TEMPLATE = scattermatrix;


*****************************************************************************
*****************************************************************************
* Table 4. Add multiple graphs to one panel in GTL.
PROC TEMPLATE;
DEFINE STATGRAPH multi;
  BEGINGRAPH; 
    ENTRYTITLE 'scatter plot matrix';
    LAYOUT LATTICE / rows=1 columns=2 
      ROWGUTTER = 5 columngutter = 5;
      SCATTERPLOT y=msrp x=horsepower / group = drivetrain; /* (1) */
      LAYOUT OVERLAY;
        SCATTERPLOT y=msrp x=mpg_highway /group=drivetrain datatransparency=.8;
        REGRESSIONPLOT y=msrp x= mpg_hwy / group = drivetrain name = 'r';
        discretelegend 'r'/  halign=right;
      ENDLAYOUT;
    ENDLAYOUT; 
  ENDGRAPH; 
END;

PROC SORT; 
BY drivetrain;

PROC SGRENDER DATA = cars TEMPLATE = multi;


*****************************************************************************
*****************************************************************************
* Table 5. GTL for creating a Data Panel.
proc template;
  define statgraph panel;
    begingraph;
      entrytitle 'Net Primary School Enrollment Ratio - Female vs. Male By Poverty Year';
      LAYOUT DATAPANEL CLASSVARS = (PopPovertyYear) / rows=2 columns=3;
        LAYOUT PROTOTYPE;
          scatterplot y = FemaleSchoolPct x = MaleSchoolPct/datalabel = name;
        ENDLAYOUT;
      ENDLAYOUT; 
    ENDGRAPH;
END;
proc sgrender data=demo template=panel;
*/(where=(Region='AFR'))/*;

*****************************************************************************
*****************************************************************************
* Table 6. Residual panel of predictors for MSRP.
proc format;
  value $origin  'USA' = 'U'
        'Europe' = 'E'
        'Asia' = 'A';

proc glm data=sashelp.cars noprint;
  class origin;
  model msrp =horsepower origin;
  format origin $origin.;
  output out=res r=r;

proc template;
  define statgraph ResidualPanel;
  begingraph;
    entrytitle 'Residuals by Predictors for MSRP';
    layout lattice / rows=1 columns=2 columngutter=10 ;
      boxplot y=r x=origin;
      layout overlay;
        scatterplot y=r x=horsepower / markercharacter=origin markercharacterattrs = (size = 10) group=origin;
        regressionplot y=r x=horsepower / linearattrs = (color=gray) degree = 3;
      endlayout;
    endlayout; 
  endgraph; 
end;

ods graphics on / height=480px width=900px;
proc sgrender data=res template = ResidualPanel; 
  label r ='Residual';

ods graphics on / reset=all;


*****************************************************************************
*****************************************************************************
/*Fig Fit function for gtl*/
proc template;
  define statgraph Fits;
  begingraph;
    entrytitle 'Fit Functions of Net Primary School Enrollment Ratio - Female vs. Male';
    layout overlay ;
      scatterplot y = FemaleSchoolPct x = MaleSchoolPct/ datalabel = name ;
      regressionplot y = FemaleSchoolPct x = MaleSchoolPct / lineattrs=GraphData1 name='Linear';regressionplot y = FemaleSchoolPct x = MaleSchoolPct / lineattrs=GraphData2 name='Cubic' degree=4;pbsplineplot y = FemaleSchoolPct x = MaleSchoolPct / lineattrs=GraphData3 name='Penalized B-Spline';loessplot y = FemaleSchoolPct x = MaleSchoolPct / lineattrs=GraphData4 name='Loess';discretelegend 'Linear' 'Cubic' 'Penalized B-Spline' 'Loess';
    endlayout;
  endgraph;
end;

proc sgrender data=demo template=Fits;
